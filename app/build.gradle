plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id 'com.adarshr.test-logger' version '3.2.0'
    id('io.ebean') version '13.6.5'
}

application {
    mainClass = 'hexlet.code.App'
}

group 'hexlet.code'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.javalin:javalin:4.6.1'
    implementation 'org.slf4j:slf4j-simple:2.0.7'

    implementation 'com.h2database:h2:2.1.214'
    implementation 'org.postgresql:postgresql:42.5.4'

    implementation 'io.ebean:ebean:13.14.1'
    implementation 'io.ebean:ebean-ddl-generator:13.14.1'
    implementation 'io.ebean:ebean-querybean:13.14.1'
    implementation 'io.ebean:ebean-migration:13.7.0'
    implementation 'io.ebean:ebean-annotation:8.3'
    annotationProcessor 'io.ebean:querybean-generator:13.14.1'

    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.8'
    implementation 'javax.activation:activation:1.1.1'

    implementation 'org.thymeleaf:thymeleaf:3.0.15.RELEASE'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'
    implementation 'org.webjars:bootstrap:5.1.3'

    implementation 'org.webjars:bootstrap:5.2.3'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'io.ebean:ebean-test:12.15.1'
    testImplementation 'com.konghq:unirest-java:3.13.6'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

testlogger {
    showStandardStreams true
}


jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
}

application {
}

compileJava {
    options.release = 17
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

run {
    standardInput = System.in
}

task generateMigrations(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'hexlet.code.MigrationGenerator'
}

task stage(dependsOn: ['clean', 'installDist'])
installDist.mustRunAfter clean